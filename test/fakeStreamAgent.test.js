const { expect } = require('chai');
const FakeStreamAgent = require('../fakeStreamAgent');
const { Response } = require('ai-agent-response');

describe('FakeStreamAgent', function() {
    let agent;

    beforeEach(function() {
        agent = new FakeStreamAgent({ delay: 50 });
    });

    it('should generate a reply based on the last message in the thread', async function() {
        const thread = {
            messages: [
                { text: "Hello, how are you?" }
            ]
        };
        
        const response = await agent.generateReply(thread);
        
        expect(response).to.be.instanceOf(Response);
        expect(response.isStream()).to.be.true;
    });

    it('should generate the correct fake message', function() {
        const thread = {
            messages: [
                { text: "What's the weather like?" }
            ]
        };
        
        const fakeMessage = agent.generateFakeMessage(thread);
        
        expect(fakeMessage).to.equal('This is a stream fake response to: "What\'s the weather like?". It was generated by FakeAgent.');
    });

    it('should create a stream with the correct delay', async function() {
        const message = "Hello world";
        const stream = agent.createFakeStream(message);
        
        let result = '';
        const startTime = Date.now();
        
        for await (const chunk of stream) {
            result += chunk;
        }
        
        const endTime = Date.now();
        const duration = endTime - startTime;
        
        expect(result.trim()).to.equal(message);
        expect(duration).to.be.at.least(100); // 2 words * 50ms delay
    });
});